<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="c:\program files (x86)\microsoft visual studio 14.0\team tools\static analysis tools\fxcop\Xml\CodeAnalysisReport.xsl"?>
<FxCopReport Version="14.0">
 <Targets>
  <Target Name="C:\Users\fengxiangling\AppData\Local\Temp\tmpF4F.tmp.cadir\bin\App_Code.dll">
   <Modules>
    <Module Name="app_code.dll">
     <Namespaces>
      <Namespace Name="">
       <Types>
        <Type Name="BackupHelper" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ReaderBackupFile(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2017-10-06 02:12:37Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="d:\fxlweb\AALifeWeb2018\AALife.Web\App_Code" File="BackupHelper.cs" Line="67">可以在方法 'BackupHelper.ReaderBackupFile(string)' 中多次释放对象 'conn'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 67</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2017-10-06 02:12:37Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="d:\fxlweb\AALifeWeb2018\AALife.Web\App_Code" File="BackupHelper.cs" Line="52">传递给 'BackupHelper.ReaderBackupFile(string)' 中的 'DbCommand.CommandText.set(string)' 的查询字符串可能包含以下变量 'comm.CommandText', 'sr.ReadLine()'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ReaderBackupFileFromApp(System.Int32,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2017-10-06 02:12:37Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="d:\fxlweb\AALifeWeb2018\AALife.Web\App_Code" File="BackupHelper.cs" Line="150">可以在方法 'BackupHelper.ReaderBackupFileFromApp(int, string)' 中多次释放对象 'conn'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 150</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2017-10-06 02:12:37Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="d:\fxlweb\AALifeWeb2018\AALife.Web\App_Code" File="BackupHelper.cs" Line="95">传递给 'BackupHelper.ReaderBackupFileFromApp(int, string)' 中的 'DbCommand.CommandText.set(string)' 的查询字符串可能包含以下变量 'comm.CommandText'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="d:\fxlweb\AALifeWeb2018\AALife.Web\App_Code" File="BackupHelper.cs" Line="109">传递给 'BackupHelper.ReaderBackupFileFromApp(int, string)' 中的 'DbCommand.CommandText.set(string)' 的查询字符串可能包含以下变量 'comm.CommandText'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="d:\fxlweb\AALifeWeb2018\AALife.Web\App_Code" File="BackupHelper.cs" Line="118">传递给 'BackupHelper.ReaderBackupFileFromApp(int, string)' 中的 'DbCommand.CommandText.set(string)' 的查询字符串可能包含以下变量 'comm.CommandText'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="d:\fxlweb\AALifeWeb2018\AALife.Web\App_Code" File="BackupHelper.cs" Line="119">传递给 'BackupHelper.ReaderBackupFileFromApp(int, string)' 中的 'DbCommand.CommandText.set(string)' 的查询字符串可能包含以下变量 'comm.CommandText'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="d:\fxlweb\AALifeWeb2018\AALife.Web\App_Code" File="BackupHelper.cs" Line="134">传递给 'BackupHelper.ReaderBackupFileFromApp(int, string)' 中的 'DbCommand.CommandText.set(string)' 的查询字符串可能包含以下变量 'comm.CommandText', 'BackupHelper.GetCardTableSqlFromApp(userId, str)'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="d:\fxlweb\AALifeWeb2018\AALife.Web\App_Code" File="BackupHelper.cs" Line="122">传递给 'BackupHelper.ReaderBackupFileFromApp(int, string)' 中的 'DbCommand.CommandText.set(string)' 的查询字符串可能包含以下变量 'comm.CommandText', 'BackupHelper.GetCatTableSqlFromApp(userId, str)'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="d:\fxlweb\AALifeWeb2018\AALife.Web\App_Code" File="BackupHelper.cs" Line="103">传递给 'BackupHelper.ReaderBackupFileFromApp(int, string)' 中的 'DbCommand.CommandText.set(string)' 的查询字符串可能包含以下变量 'comm.CommandText', 'BackupHelper.GetItemTableSqlFromApp(userId, str)'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="d:\fxlweb\AALifeWeb2018\AALife.Web\App_Code" File="BackupHelper.cs" Line="112">传递给 'BackupHelper.ReaderBackupFileFromApp(int, string)' 中的 'DbCommand.CommandText.set(string)' 的查询字符串可能包含以下变量 'comm.CommandText', 'BackupHelper.GetItemTableSqlFromWeb(userId, str)'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="d:\fxlweb\AALifeWeb2018\AALife.Web\App_Code" File="BackupHelper.cs" Line="99">传递给 'BackupHelper.ReaderBackupFileFromApp(int, string)' 中的 'DbCommand.CommandText.set(string)' 的查询字符串可能包含以下变量 'comm.CommandText', 'BackupHelper.GetUserTableSqlFromApp(userId, str)'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="d:\fxlweb\AALifeWeb2018\AALife.Web\App_Code" File="BackupHelper.cs" Line="130">传递给 'BackupHelper.ReaderBackupFileFromApp(int, string)' 中的 'DbCommand.CommandText.set(string)' 的查询字符串可能包含以下变量 'comm.CommandText', 'BackupHelper.GetZhangTableSqlFromApp(userId, str)'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="d:\fxlweb\AALifeWeb2018\AALife.Web\App_Code" File="BackupHelper.cs" Line="126">传递给 'BackupHelper.ReaderBackupFileFromApp(int, string)' 中的 'DbCommand.CommandText.set(string)' 的查询字符串可能包含以下变量 'comm.CommandText', 'BackupHelper.GetZhuanTableSqlFromApp(userId, str)'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WriteBackupFile(System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2017-10-06 02:12:37Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="d:\fxlweb\AALifeWeb2018\AALife.Web\App_Code" File="BackupHelper.cs" Line="27">可以在方法 'BackupHelper.WriteBackupFile(string, string)' 中多次释放对象 'sw'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 27</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MenuHelper" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="TypesThatOwnDisposableFieldsShouldBeDisposable" Category="Microsoft.Design" CheckId="CA1001" Status="Active" Created="2017-10-06 02:12:37Z" FixCategory="DependsOnFix">
           <Issue Name="DependsOnFix" Certainty="95" Level="CriticalError">在 'MenuHelper' 上实现 IDisposable，因为它创建下列 IDisposable 类型的成员: 'DataTable'。如果以前提供过 'MenuHelper'，对于现有使用者来说，向此类型添加用于实现 IDisposable 的新成员属于重大更改。</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="QPlusOpen" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#MakeRequest(System.String,System.Collections.Generic.SortedList`2&lt;System.String,System.String&gt;,System.Web.HttpRequest)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2017-10-06 02:12:37Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="d:\fxlweb\AALifeWeb2018\AALife.Web\App_Code\QQOAuth" File="QPlusOpen.cs" Line="90">可以在方法 'QPlusOpen.MakeRequest(string, SortedList&lt;string, string&gt;, HttpRequest)' 中多次释放对象 'responseData'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 90</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="AALife.Web">
       <Types>
        <Type Name="MultipartForm" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="TypesThatOwnDisposableFieldsShouldBeDisposable" Category="Microsoft.Design" CheckId="CA1001" Status="Active" Created="2017-10-06 02:12:37Z" FixCategory="DependsOnFix">
           <Issue Name="DependsOnFix" Certainty="95" Level="CriticalError">在 'MultipartForm' 上实现 IDisposable，因为它创建下列 IDisposable 类型的成员: 'MemoryStream'。如果以前提供过 'MultipartForm'，对于现有使用者来说，向此类型添加用于实现 IDisposable 的新成员属于重大更改。</Issue>
          </Message>
         </Messages>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="NS_SnsNetWork">
       <Types>
        <Type Name="SnsNetWork" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#MakeRequest(System.String,System.Collections.Generic.Dictionary`2&lt;System.String,System.String&gt;,System.Collections.Generic.Dictionary`2&lt;System.String,System.String&gt;,System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2017-10-06 02:12:37Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="d:\fxlweb\AALifeWeb2018\AALife.Web\App_Code\QQOAuth" File="SnsNetWork.cs" Line="162">可以在方法 'SnsNetWork.MakeRequest(string, Dictionary&lt;string, string&gt;, Dictionary&lt;string, string&gt;, string, string)' 中多次释放对象 'reader'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 162</Issue>
             <Issue Certainty="75" Level="Warning" Path="d:\fxlweb\AALifeWeb2018\AALife.Web\App_Code\QQOAuth" File="SnsNetWork.cs" Line="162">可以在方法 'SnsNetWork.MakeRequest(string, Dictionary&lt;string, string&gt;, Dictionary&lt;string, string&gt;, string, string)' 中多次释放对象 'response.GetResponseStream()'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 162</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MutilpartPostFile(System.String,System.Collections.Generic.Dictionary`2&lt;System.String,System.String&gt;,System.Collections.Generic.Dictionary`2&lt;System.String,System.String&gt;,System.String,System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2017-10-06 02:12:37Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="d:\fxlweb\AALifeWeb2018\AALife.Web\App_Code\QQOAuth" File="SnsNetWork.cs" Line="313">可以在方法 'SnsNetWork.MutilpartPostFile(string, Dictionary&lt;string, string&gt;, Dictionary&lt;string, string&gt;, string, string, string)' 中多次释放对象 'file_stream'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 313</Issue>
             <Issue Certainty="75" Level="Warning" Path="d:\fxlweb\AALifeWeb2018\AALife.Web\App_Code\QQOAuth" File="SnsNetWork.cs" Line="318">可以在方法 'SnsNetWork.MutilpartPostFile(string, Dictionary&lt;string, string&gt;, Dictionary&lt;string, string&gt;, string, string, string)' 中多次释放对象 'mem_stream'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 318</Issue>
             <Issue Certainty="75" Level="Warning" Path="d:\fxlweb\AALifeWeb2018\AALife.Web\App_Code\QQOAuth" File="SnsNetWork.cs" Line="308">可以在方法 'SnsNetWork.MutilpartPostFile(string, Dictionary&lt;string, string&gt;, Dictionary&lt;string, string&gt;, string, string, string)' 中多次释放对象 'reader'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 308</Issue>
             <Issue Certainty="75" Level="Warning" Path="d:\fxlweb\AALifeWeb2018\AALife.Web\App_Code\QQOAuth" File="SnsNetWork.cs" Line="323">可以在方法 'SnsNetWork.MutilpartPostFile(string, Dictionary&lt;string, string&gt;, Dictionary&lt;string, string&gt;, string, string, string)' 中多次释放对象 'req_stream'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 323</Issue>
             <Issue Certainty="75" Level="Warning" Path="d:\fxlweb\AALifeWeb2018\AALife.Web\App_Code\QQOAuth" File="SnsNetWork.cs" Line="308">可以在方法 'SnsNetWork.MutilpartPostFile(string, Dictionary&lt;string, string&gt;, Dictionary&lt;string, string&gt;, string, string, string)' 中多次释放对象 'response.GetResponseStream()'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 308</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
  <Target Name="C:\Users\fengxiangling\AppData\Local\Temp\tmpF4F.tmp.cadir\bin\App_Web_lrnow4se.dll">
   <Modules>
    <Module Name="app_web_lrnow4se.dll">
     <Namespaces>
      <Namespace Name="">
       <Types>
        <Type Name="UserDataAdmin" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#SaveExcel(System.Data.DataTable)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2017-10-06 02:12:37Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="d:\fxlweb\AALifeWeb2018\AALife.Web" File="UserDataAdmin.aspx.cs" Line="294">可以在方法 'UserDataAdmin.SaveExcel(DataTable)' 中多次释放对象 'conn'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 294</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2017-10-06 02:12:37Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="d:\fxlweb\AALifeWeb2018\AALife.Web" File="UserDataAdmin.aspx.cs" Line="277">传递给 'UserDataAdmin.SaveExcel(DataTable)' 中的 'DbCommand.CommandText.set(string)' 的查询字符串可能包含以下变量 'item.ItemType', 'item.ItemName', 'item.CategoryTypeID', 'item.ItemPrice', 'item.ItemBuyDate.ToString("yyyy-MM-dd")', 'item.ItemBuyDate.ToString("HH:mm:ss")', 'this.userId', 'item.Recommend', 'item.ZhuanTiID', 'item.CardID', 'item.Synchronize', 'item.ModifyDate'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
  <Target Name="C:\Users\fengxiangling\AppData\Local\Temp\tmpF4F.tmp.cadir\bin\App_Web_nhia1ozn.dll">
   <Modules>
    <Module Name="app_web_nhia1ozn.dll">
     <Namespaces>
      <Namespace Name="">
       <Types>
        <Type Name="UserDataAdmin" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#SaveExcel(System.Data.DataTable)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2017-10-06 02:12:37Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="d:\fxlweb\AALifeWeb2018\AALife.Web\Web2015" File="UserDataAdmin.aspx.cs" Line="279">可以在方法 'UserDataAdmin.SaveExcel(DataTable)' 中多次释放对象 'conn'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 279</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2017-10-06 02:12:37Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="d:\fxlweb\AALifeWeb2018\AALife.Web\Web2015" File="UserDataAdmin.aspx.cs" Line="262">传递给 'UserDataAdmin.SaveExcel(DataTable)' 中的 'DbCommand.CommandText.set(string)' 的查询字符串可能包含以下变量 'item.ItemType', 'item.ItemName', 'item.CategoryTypeID', 'item.ItemPrice', 'item.ItemBuyDate.ToString("yyyy-MM-dd")', 'item.ItemBuyDate.ToString("HH:mm:ss")', 'this.userId', 'item.Recommend', 'item.ZhuanTiID', 'item.CardID', 'item.Synchronize', 'item.ModifyDate'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
 </Targets>
 <Rules>
  <Rule TypeName="TypesThatOwnDisposableFieldsShouldBeDisposable" Category="Microsoft.Design" CheckId="CA1001">
   <Name>具有可释放字段的类型应该是可释放的</Name>
   <Description>声明可释放成员的类型也应实现 IDisposable。如果该类型没有任何非托管资源，请不要在其上实现终结器。</Description>
   <Resolution Name="DependsOnFix">在 {0} 上实现 IDisposable，因为它创建下列 IDisposable 类型的成员: {1}。如果以前提供过 {0}，对于现有使用者来说，向此类型添加用于实现 IDisposable 的新成员属于重大更改。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182172.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202">
   <Name>不要多次释放对象</Name>
   <Description>可以多次调用正确实现的 Dispose 方法，而不会引发异常。但是，并不保证所有情况下都会如此。若要避免生成 System.ObjectDisposedException，您不应对一个对象多次调用 Dispose。</Description>
   <Resolution Name="Default">可以在方法 {1} 中多次释放对象 {0}。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 279</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182334.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100">
   <Name>检查 SQL 查询是否存在安全漏洞</Name>
   <Description>通过用户输入生成的 SQL 命令字符串容易受到 SQL 注入式攻击。Microsoft SQL Server 和其他数据库服务器支持存储过程和参数化 SQL 查询，这将降低受到注入式攻击的风险。</Description>
   <Resolution Name="WithNonLiterals">传递给 {1} 中的 {0} 的查询字符串可能包含以下变量 {2}。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182310.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="14.0.0.0" />
  </Rule>
 </Rules>
 <Localized>
  <String Key="Category">类别</String>
  <String Key="Certainty">确定性</String>
  <String Key="CollapseAll">全部折叠</String>
  <String Key="CheckId">检查 ID</String>
  <String Key="Error">错误</String>
  <String Key="Errors">错误</String>
  <String Key="ExpandAll">全部展开</String>
  <String Key="Help">帮助</String>
  <String Key="Line">行</String>
  <String Key="Messages">消息</String>
  <String Key="LocationNotStoredInPdb">[位置未存储在 Pdb 中]</String>
  <String Key="Project">项目</String>
  <String Key="Resolution">解析</String>
  <String Key="Rule">规则</String>
  <String Key="RuleFile">规则文件</String>
  <String Key="RuleDescription">规则说明</String>
  <String Key="Source">源</String>
  <String Key="Status">状态</String>
  <String Key="Target">目标</String>
  <String Key="Warning">警告</String>
  <String Key="Warnings">警告</String>
  <String Key="ReportTitle">代码分析报告</String>
 </Localized>
</FxCopReport>
