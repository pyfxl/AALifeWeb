@{
    ViewBag.Title = "权限列表";
}

<div class="row">
    <div class="col-xs-12">
        <div id="main">
            <div id="treelist"></div>
        </div>
    </div><!-- /.col -->
</div><!-- /.row -->

@section scripts {
<script>
    $(document).ready(function () {

        //树数据源
        var dataSource = new kendo.data.TreeListDataSource({
            transport: {
                read: {
                    url: $.const.webapi.permissions,
                    dataType: "json",
                    contentType: "application/json; charset=utf-8",
                    cache: false
                },
                update: {
                    url: $.const.webapi.permissions,
                    dataType: "json",
                    contentType: "application/json; charset=utf-8",
                    type: "PUT",
                    complete: function (xhr, textStatus) {
                        kendoui_grid_complete(textStatus);
                        //dataSource.read();
                    }
                },
                destroy: {
                    url: $.const.webapi.permissions,
                    dataType: "json",
                    contentType: "application/json; charset=utf-8",
                    type: "DELETE",
                    complete: function (xhr, textStatus) {
                        kendoui_grid_complete(textStatus);
                        //dataSource.read();
                    }
                },
                create: {
                    url: $.const.webapi.permissions,
                    dataType: "json",
                    contentType: "application/json; charset=utf-8",
                    type: "POST",
                    complete: function (xhr, textStatus) {
                        kendoui_grid_complete(textStatus);
                        dataSource.read();
                    }
                },
                parameterMap: function (options, operation) {
                    if (operation === "destroy" && options.models) {
                        return kendo.stringify(options.models);
                    }
                    if (operation !== "read" && options.models) {
                        return kendo.stringify(options.models[0]);
                    }
                }
            },
            batch: true,
            schema: {
                model: {
                    id: "Id",
                    parentId: "ParentId",
                    fields: {
                        Id: { type: "number", editable: false, nullable: false },
                        ParentId: { type: "text", defaultValue: null },
                        Name: { type: "text", validation: { required: true, validationMessage: "角色名称为必填项" } },
                        AreaName: { type: "text" },
                        ControllerName: { type: "text" },
                        ActionName: { type: "text" },
                        Rank: { type: "number", defaultValue: 1 }
                    },
                    expanded: false
                }
            },
            error: function (e) {
                kendoui_grid_error(e);
            }
        });

        //列表树
        var treelist = $("#treelist").kendoTreeList($.extend(true, {}, $.const.kendotree, {
            dataSource: dataSource,
            toolbar: ["create"],
            columns: [
                {
                    expandable: true,
                    field: "Name",
                    title: "角色名称",
                    width: 150
                },
                {
                    field: "AreaName",
                    title: "区域",
                    width: 100
                },
                {
                    field: "ControllerName",
                    title: "控制器",
                    width: 100
                },
                {
                    field: "ActionName",
                    title: "动作",
                    width: 100
                },
                {
                    field: "Rank",
                    title: "排序",
                    width: 100,
                    format: "{0:0}"
                },
                {
                    command: [
                        {
                            name: "createchild",
                            text: "添加子项"
                        },
                        "edit",
                        "destroy"
                    ],
                    width: 200
                }
            ],
            dataBound: function () {
                //var grid = this; //TODO:隐藏添加子项，同时父项可以保存
                //var trs = this.tbody.find('tr').each(function () {
                //    var item = grid.dataItem($(this));
                //    if (item.ParentId) {
                //        $(this).data('.k-grid-add').hide();
                //    }
                //});
            }
        }));

    });
</script>
}
