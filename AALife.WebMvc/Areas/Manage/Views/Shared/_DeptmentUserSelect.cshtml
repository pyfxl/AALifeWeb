<!--选择用户grid-->
<div class="container-fluid">
    <div class="row">
        <div class="col-xs-12">
            <div class="col-xs-2">
                <div id="dialog-deptmenttree"></div>
            </div>
            <div class="col-xs-10">
                <div id="dialog-grid"></div>
            </div>
        </div>
    </div>
</div>
<script src="~/Areas/Manage/Scripts/deptments.js"></script>
<script>
    //变量
    var dialog_selectedId = '@Model';

    $(document).ready(function () {

        //数据源
        var treeDataSource = new kendo.data.HierarchicalDataSource({
            transport: {
                read: {
                    url: $.const.webapi.deptmentstree,
                    dataType: "json"
                }
            },
            schema: {
                model: {
                    id: "Id",
                    parentId: "ParentId",
                    hasChildren: "hasChildren"
                },
            }
        });

        //树列表
        var dialog_deptmenttree = $("#dialog-deptmenttree").kendoTreeView({
            dataSource: treeDataSource,
            dataBound: function (e) {
                $("#dialog-deptmenttree").height($("#dialog-grid").height());
            },
            template: "#= item.IsDeptment ? '' : '<i class=\"fa fa-sticky-note-o\"></i> ' ##= item.Name #",
            select: function (e) {
                var dataItem = dialog_deptmenttree.dataItem(e.node);
                dialog_selectedId = dataItem.id;
                //刷新主列表
                var user = $("#dialog-grid").data("kendoGrid");
                user.dataSource.page(1);
            }
        }).data("kendoTreeView");

        //用户列表
        $("#dialog-grid").kendoGrid($.extend(true, {}, $.const.kendogrid, {
            dataSource: {
                transport: {
                    read: {
                        url: function (item) {
                            return String.format($.const.webapi.deptmentsuser_id, dialog_selectedId);
                        },
                        cache: false,
                        dataType: "json"
                    },
                    parameterMap: function (options, operation) {
                        kendoui_parameter_format(options);
                        return options;
                    }
                },
                schema: {
                    model: {
                        id: "Id",
                        fields: $.kendo.user.fields
                    }
                },
                error: function (e) {
                    kendoui_grid_error(e);
                },
                pageSize: 10
            },
            autoBind: true,
            columns: $.kendo.user.columns
        }));

        //导航树路径
        get_deptmentstreepath(dialog_selectedId, function (data) {
            var ids = [];
            $.each(data, function (i, d) {
                ids.push(d.Id);
            });
            //debugger;
            dialog_deptmenttree.expandPath(ids);
            setTimeout(function () {
                var selectItem = data[data.length - 1];
                var selectNode = dialog_deptmenttree.findByText(selectItem.Name);
                dialog_deptmenttree.select(selectNode);
            }, 500);
        });
    });
</script>
