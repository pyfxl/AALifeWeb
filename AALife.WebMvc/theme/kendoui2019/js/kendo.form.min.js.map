{"version":3,"sources":["kendo.form.js"],"names":["f","define","$","undefined","kendo","window","ui","NS","Widget","extend","proxy","VALIDATE","VALIDATEFIELD","VALIDATEINPUT","CHANGE","CLICK","SUBMIT","CLEAR","MAX_WIDTH","SET","EQUAL_SET","GROUP","ARIA_DESCRIBEDBY","DATA_STOP","DATA_ROLE","EDITABLE","FORM","DOT","formStyles","form","horizontal","vertical","field","fieldsContainer","fieldWrap","fieldError","fieldHint","fieldset","layout","legend","label","optional","buttonsContainer","buttonsEnd","submit","clear","invalid","hidden","formOrientation","Form","init","element","options","that","this","fn","call","_wrapper","_setFields","_setModel","_renderContainers","_renderButtons","_editable","_renderFieldsHints","_setEvents","events","name","orientation","validatable","validateOnBlur","validationSummary","errorTemplate","_errorTemplate","buttonsTemplate","messages","grid","formData","items","formatLabel","_fieldTemplate","_groupTemplate","_buttonsTemplate","_hintTemplate","styles","width","height","wrapper","addClass","css","layoutWrapper","_setupLayoutContainer","_flattenFields","fields","concat","item","shift","result","push","apply","_defaultLabel","fieldName","customFormat","length","isFunction","split","join","trim","_formatLabel","text","isPlainObject","_defaultFields","i","formDataFields","Object","keys","itemFields","defaultFormDataFields","id","fieldInfo","fieldValue","type","editor","attributes","defaultFields","_fields","parseDate","Editable","editors","aria-labelledby","MyModel","data","Model","_model","_addEditableMvvmAttributes","editable","kendoEditable","model","clearContainer","skipFocus","target","getKendoEditable","validator","_removeEditableMvvmAttributes","attr","_getItemTemplate","template","_renderField","renderedField","colSpan","_toggleFieldErrorState","state","closest","toggleClass","fieldWidgetInstance","fieldElement","hint","find","message","_associateHintContainer","widgetInstance","_errorsByName","removeAttribute","insertAfter","input","hintId","nextFocusable","getWidgetFocusableElement","toggleAttribute","_toggleHint","_renderGroup","child","renderedGroup","append","container","columnsLayout","targetContainer","isHorizontal","appendTarget","layoutContainer","layoutClassNames","appendTo","cols","gutter","bind","_validateField","_validate","on","_submit","_clear","_change","ev","toJSON","valid","error","trigger","preventDefault","errors","value","jsonModel","validate","reset","unbind","val","set","removeClass","_validateProxy","setOptions","newOptions","destroy","removeAttr","empty","off","plugin","jQuery","amd","a1","a2","a3"],"mappings":"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","file":"kendo.form.min.js","sourcesContent":["/*!\n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n\n*/\n(function (f, define) {\n    define('kendo.form', ['kendo.editable'], f);\n}(function () {\n    var __meta__ = {\n        id: 'form',\n        name: 'Form',\n        category: 'web',\n        description: 'The Form widget.',\n        depends: ['editable'],\n        features: [\n            {\n                id: 'form-dropdowns',\n                name: 'DropDowns',\n                description: 'Support for DropDown editors',\n                depends: [\n                    'autocomplete',\n                    'combobox',\n                    'multiselect',\n                    'dropdowntree',\n                    'multicolumncombobox'\n                ]\n            },\n            {\n                id: 'form-datepickers',\n                name: 'DatePickers',\n                description: 'Support for DatePicker editors',\n                depends: [\n                    'dateinput',\n                    'datepicker',\n                    'datetimepicker',\n                    'timepicker'\n                ]\n            },\n            {\n                id: 'form-inputs',\n                name: 'Inputs',\n                description: 'Support for Input editors',\n                depends: [\n                    'numerictextbox',\n                    'maskedtextbox',\n                    'switch',\n                    'rating',\n                    'slider',\n                    'colorpicker'\n                ]\n            },\n            {\n                id: 'form-editor',\n                name: 'Editor',\n                description: 'Support for Editor editor',\n                depends: ['editor']\n            }\n        ]\n    };\n    (function ($, undefined) {\n        var kendo = window.kendo, ui = kendo.ui, NS = '.kendoForm', Widget = ui.Widget, extend = $.extend, proxy = $.proxy, VALIDATE = 'validate', VALIDATEFIELD = 'validateField', VALIDATEINPUT = 'validateInput', CHANGE = 'change', CLICK = 'click' + NS, SUBMIT = 'submit', CLEAR = 'clear', MAX_WIDTH = 'max-width', SET = 'set', EQUAL_SET = 'equalSet', GROUP = 'group', ARIA_DESCRIBEDBY = 'aria-describedby', DATA_STOP = 'data-stop', DATA_ROLE = 'data-role', EDITABLE = 'editable', FORM = 'form', DOT = '.';\n        var formStyles = {\n            form: 'k-widget k-form',\n            horizontal: 'k-form-horizontal',\n            vertical: '',\n            field: 'k-form-field',\n            fieldsContainer: 'k-form-fields-container',\n            fieldWrap: 'k-form-field-wrap',\n            fieldError: 'k-form-field-error',\n            fieldHint: 'k-form-hint',\n            fieldset: 'k-form-fieldset',\n            layout: 'k-form-layout',\n            legend: 'k-form-legend',\n            label: 'k-label k-form-label',\n            optional: 'k-label-optional',\n            buttonsContainer: 'k-form-buttons',\n            buttonsEnd: 'k-buttons-end',\n            submit: 'k-form-submit',\n            clear: 'k-form-clear',\n            invalid: 'k-invalid',\n            hidden: 'k-hidden'\n        };\n        var formOrientation = {\n            horizontal: 'horizontal',\n            vertical: 'vertical'\n        };\n        var Form = Widget.extend({\n            init: function (element, options) {\n                var that = this;\n                Widget.fn.init.call(that, element, options);\n                that.options = extend({}, that.options, options);\n                that._wrapper();\n                that._setFields();\n                that._setModel();\n                that._renderContainers();\n                that._renderButtons();\n                that._editable();\n                that._renderFieldsHints();\n                that._setEvents();\n            },\n            events: [\n                VALIDATEFIELD,\n                VALIDATE,\n                CHANGE,\n                SUBMIT,\n                CLEAR\n            ],\n            options: {\n                name: 'Form',\n                orientation: formOrientation.vertical,\n                validatable: {\n                    validateOnBlur: true,\n                    validationSummary: false,\n                    errorTemplate: this._errorTemplate\n                },\n                buttonsTemplate: null,\n                messages: {\n                    submit: 'Submit',\n                    clear: 'Clear',\n                    optional: '(Optional)'\n                },\n                layout: '',\n                grid: {},\n                formData: {},\n                items: [],\n                formatLabel: null\n            },\n            _fieldTemplate: '<div class=\\'#:styles.field#  #if (colSpan) { #  k-colspan-#:colSpan# # } #\\'>' + '# if (label) { # ' + '<label class=\\'#:styles.label#\\' for=\\'#:id#\\' id=\\'#:id#-form-label\\'>' + '#: label.text || label #' + '# if (label.optional) { # <span class=\\'#:styles.optional#\\'>#:optional#</span>  #}#' + '</label>' + '# } #' + '<div class=\\'k-form-field-wrap\\' data-container-for=\\'#:field#\\'></div>' + '</div>',\n            _groupTemplate: '<fieldset class=\\'#:styles.fieldset# #if (colSpan) { #  k-colspan-#:colSpan# # }#\\'>' + '<legend class=\\'#:styles.legend#\\'>#:label.text || label #</legend>' + '</fieldset>',\n            _buttonsTemplate: '<button class=\\'k-button k-primary #:styles.submit#\\' type=\\'submit\\'>#:messages.submit#</button>' + '<button class=\\'k-button #:styles.clear#\\'>#:messages.clear#</button>',\n            _errorTemplate: '<span class=\\'k-form-error\\' id=\\'#=field#-form-error\\'><div>#=message#</div></span>',\n            _hintTemplate: '<div class=\\'k-form-hint\\' id=\\'#=id#-form-hint\\'><span>#=message#</span></div>',\n            _wrapper: function () {\n                var that = this, options = that.options, formStyles = Form.styles, width = options.width, height = options.height;\n                that.wrapper = that.element.addClass(formStyles.form).addClass(formStyles[options.orientation]);\n                if (height) {\n                    that.wrapper.height(height);\n                }\n                if (width) {\n                    that.wrapper.css(MAX_WIDTH, width);\n                }\n                that.layoutWrapper = that._setupLayoutContainer(that.wrapper, {\n                    grid: options.grid,\n                    layout: options.layout\n                });\n            },\n            _flattenFields: function (fields) {\n                var items = [].concat(fields), item = items.shift(), result = [], push = [].push;\n                while (item) {\n                    if (item.items) {\n                        push.apply(items, item.items);\n                    } else {\n                        push.call(result, item);\n                    }\n                    item = items.shift();\n                }\n                return result;\n            },\n            _defaultLabel: function (fieldName) {\n                var that = this, customFormat = that.options.formatLabel;\n                if (!fieldName.length) {\n                    return;\n                }\n                if (kendo.isFunction(customFormat)) {\n                    return customFormat(fieldName);\n                }\n                return fieldName.split(/(.*[a-z])(?=[A-Z])/).join(' ').trim() + ':';\n            },\n            _formatLabel: function (field, label) {\n                var that = this, text = $.isPlainObject(label) ? label.text : label;\n                if (text.length) {\n                    return label;\n                }\n                return that._defaultLabel(field);\n            },\n            _defaultFields: function () {\n                var that = this, options = that.options, formDataFields = Object.keys(options.formData || {}), itemFields = options.items || {}, defaultFormDataFields = [], field;\n                if (itemFields.length) {\n                    return itemFields;\n                }\n                for (var i = 0; i < formDataFields.length; i += 1) {\n                    field = formDataFields[i];\n                    defaultFormDataFields.push({\n                        field: field,\n                        id: field\n                    });\n                }\n                return defaultFormDataFields;\n            },\n            _setFields: function () {\n                var that = this, defaultFields = that._flattenFields(that._defaultFields()), formData = that.options.formData || {}, fieldInfo, fieldValue, type, editor, attributes;\n                that._fields = [];\n                for (var field in defaultFields) {\n                    fieldInfo = defaultFields[field];\n                    fieldValue = formData[fieldInfo.field];\n                    type = typeof fieldInfo.editor === 'string' ? fieldInfo.editor : $.type(fieldValue ? kendo.parseDate(fieldValue.toString()) || fieldValue : fieldValue);\n                    editor = kendo.isFunction(fieldInfo.editor) ? fieldInfo.editor : ui.Editable.fn.options.editors[type] ? '' : fieldInfo.editor;\n                    attributes = { 'aria-labelledby': fieldInfo.id || fieldInfo.field + '-form-label' };\n                    fieldInfo = extend(true, {}, fieldInfo, {\n                        id: fieldInfo.id || fieldInfo.field,\n                        name: fieldInfo.name || fieldInfo.field,\n                        type: type,\n                        editor: editor,\n                        attributes: attributes\n                    });\n                    that._fields[field] = fieldInfo;\n                }\n            },\n            _setModel: function () {\n                var that = this, options = that.options, formData = options.formData || {};\n                var MyModel = kendo.data.Model.define({ fields: that._fields });\n                that._model = new MyModel(formData);\n            },\n            _editable: function () {\n                var that = this, options = that.options.validatable;\n                that._addEditableMvvmAttributes();\n                that.editable = that.wrapper.kendoEditable({\n                    model: that._model,\n                    fields: that._fields || [],\n                    validateOnBlur: options.validateOnBlur,\n                    validationSummary: options.validationSummary,\n                    errorTemplate: options.errorTemplate || that._errorTemplate,\n                    clearContainer: false,\n                    skipFocus: true,\n                    target: that\n                }).getKendoEditable();\n                that.validator = that.editable.validatable;\n                that._removeEditableMvvmAttributes();\n            },\n            _addEditableMvvmAttributes: function () {\n                this.wrapper.attr(DATA_ROLE, EDITABLE);\n            },\n            _removeEditableMvvmAttributes: function () {\n                this.wrapper.attr(DATA_STOP, true).attr(DATA_ROLE, FORM);\n            },\n            _getItemTemplate: function (type) {\n                var that = this, template;\n                if (type === GROUP) {\n                    template = that._groupTemplate;\n                } else {\n                    template = that._fieldTemplate;\n                }\n                return template;\n            },\n            _renderField: function (item) {\n                var that = this, formStyles = Form.styles, renderedField;\n                renderedField = kendo.template(that._fieldTemplate)({\n                    styles: formStyles,\n                    id: item.id || item.field || '',\n                    field: item.field || '',\n                    label: that._formatLabel(item.field, item.label || ''),\n                    colSpan: item.colSpan || '',\n                    optional: that.options.messages.optional\n                });\n                return renderedField;\n            },\n            _toggleFieldErrorState: function (element, state) {\n                var field = element.closest(DOT + formStyles.field);\n                if (field.length) {\n                    field.toggleClass(formStyles.fieldError, state);\n                }\n            },\n            _renderFieldsHints: function () {\n                var that = this, fields = that._fields, field, fieldWidgetInstance, fieldElement, hint;\n                for (var i = 0; i < fields.length; i += 1) {\n                    field = fields[i];\n                    fieldElement = that.wrapper.find('[name=\\'' + field.name + '\\']');\n                    if (!fieldElement || !field.hint) {\n                        continue;\n                    }\n                    hint = $(kendo.template(that._hintTemplate)({\n                        message: field.hint || '',\n                        id: field.id\n                    }));\n                    that._associateHintContainer(fieldElement, hint.attr('id'));\n                    fieldWidgetInstance = kendo.widgetInstance(fieldElement);\n                    if (fieldWidgetInstance) {\n                        fieldElement = fieldWidgetInstance.wrapper;\n                    }\n                    if (that.validator._errorsByName(field.name).length) {\n                        hint.toggleClass(formStyles.hidden);\n                        kendo.removeAttribute(fieldElement, ARIA_DESCRIBEDBY, hint.attr('id'));\n                    }\n                    hint.insertAfter(fieldElement);\n                }\n            },\n            _associateHintContainer: function (input, hintId) {\n                var nextFocusable = kendo.getWidgetFocusableElement(input);\n                if (!nextFocusable || !hintId) {\n                    return;\n                }\n                kendo.toggleAttribute(nextFocusable, ARIA_DESCRIBEDBY, hintId);\n            },\n            _toggleHint: function (element, state) {\n                var that = this, field = element.closest(DOT + formStyles.field), hint;\n                if (field.length) {\n                    hint = field.find(DOT + formStyles.fieldHint);\n                    if (hint.length) {\n                        hint.toggleClass(formStyles.hidden, state);\n                        that._associateHintContainer(element, hint.attr('id'));\n                    }\n                }\n            },\n            _renderGroup: function (item) {\n                var that = this, type = item.type, child, renderedGroup, fieldsContainer;\n                fieldsContainer = renderedGroup = $(kendo.template(that._getItemTemplate(type))({\n                    styles: formStyles,\n                    label: item.label || '',\n                    colSpan: item.colSpan\n                }));\n                fieldsContainer = that._setupLayoutContainer(renderedGroup, {\n                    grid: item.grid,\n                    layout: item.layout\n                }) || renderedGroup;\n                for (var i = 0; i < item.items.length; i += 1) {\n                    child = item.items[i];\n                    fieldsContainer.append(that._renderField(child));\n                }\n                return renderedGroup;\n            },\n            _renderContainers: function () {\n                var that = this, defaultFields = that._defaultFields(), columnsLayout = that.options.layout === 'grid', targetContainer = columnsLayout ? that.layoutWrapper : that.wrapper, item, type, container;\n                for (var i = 0; i < defaultFields.length; i += 1) {\n                    item = defaultFields[i];\n                    type = item.type;\n                    if (type === GROUP) {\n                        container = that._renderGroup(item);\n                    } else {\n                        container = that._renderField(item);\n                    }\n                    targetContainer.append(container);\n                }\n            },\n            _renderButtons: function () {\n                var that = this, wrapper = that.wrapper, options = that.options, messages = options.messages, formStyles = Form.styles, isHorizontal = options.orientation === formOrientation.horizontal, buttonsContainer = wrapper.find(DOT + formStyles.buttonsContainer), buttonsTemplate;\n                if (!buttonsContainer.length) {\n                    buttonsContainer = $('<div />').addClass(formStyles.buttonsContainer).addClass(isHorizontal ? formStyles.buttonsEnd : '');\n                }\n                buttonsTemplate = options.buttonsTemplate !== null ? options.buttonsTemplate : that._buttonsTemplate;\n                buttonsContainer.append(kendo.template(buttonsTemplate)({\n                    styles: formStyles,\n                    messages: messages\n                }));\n                that.element.append(buttonsContainer);\n            },\n            _setupLayoutContainer: function (appendTarget, options) {\n                var layout = options.layout, grid = options.grid, layoutClassNames = [], layoutContainer;\n                if (typeof layout === 'string' && layout !== '') {\n                    layoutContainer = $('<div></div>').appendTo(appendTarget).addClass(formStyles.layout);\n                    layoutClassNames.push('k-d-' + layout);\n                }\n                if (layout === 'grid' && typeof grid === 'object') {\n                    if (typeof grid.cols === 'number') {\n                        layoutClassNames.push('k-grid-cols-' + grid.cols);\n                    } else if (typeof grid.cols === 'string') {\n                        layoutContainer.css('grid-template-columns', grid.cols);\n                    }\n                    if (typeof grid.gutter === 'number' || typeof grid.gutter === 'string') {\n                        layoutContainer.css('grid-gap', grid.gutter);\n                    }\n                }\n                if (layoutContainer) {\n                    layoutContainer.addClass(layoutClassNames.join(' '));\n                }\n                return layoutContainer;\n            },\n            _setEvents: function () {\n                var that = this, validator = that.validator;\n                validator.bind(VALIDATEINPUT, proxy(that._validateField, that)).bind(VALIDATE, proxy(that._validate, that));\n                that.wrapper.on(SUBMIT, proxy(that._submit, that)).on(CLEAR, proxy(that._clear, that)).on(CLICK, DOT + formStyles.clear, proxy(that._clear, that));\n                that._model.bind(CHANGE, proxy(that._change, that));\n            },\n            _validateField: function (ev) {\n                var that = this, data = {\n                        model: that._model.toJSON(),\n                        valid: ev.valid,\n                        field: ev.field,\n                        error: ev.error,\n                        input: ev.input\n                    };\n                that._toggleFieldErrorState(data.input, !data.valid);\n                that._toggleHint(data.input, !data.valid);\n                if (that.trigger(VALIDATEFIELD, data)) {\n                    ev.preventDefault();\n                }\n            },\n            _validate: function (ev) {\n                var that = this, data = {\n                        model: that._model.toJSON(),\n                        valid: ev.valid,\n                        errors: ev.errors\n                    };\n                that.trigger(VALIDATE, data);\n            },\n            _change: function (ev) {\n                var that = this, field = ev.field, data = {\n                        field: field,\n                        value: that._model[field]\n                    };\n                that.trigger(CHANGE, data);\n            },\n            _submit: function (ev) {\n                var that = this, jsonModel = that._model.toJSON();\n                if (that.trigger(SUBMIT, { model: jsonModel })) {\n                    ev.preventDefault();\n                }\n            },\n            _clear: function (ev) {\n                var that = this;\n                ev.preventDefault();\n                that.clear();\n                that.trigger(CLEAR);\n            },\n            validate: function () {\n                var that = this, validator = that.validator;\n                if (!validator) {\n                    return;\n                }\n                validator.validate();\n            },\n            clear: function () {\n                var that = this, fields = that._fields, model = that._model, editable = that.editable, validateOnBlur = that.validator.options.validateOnBlur;\n                that.validator.reset();\n                if (validateOnBlur) {\n                    model.unbind(SET).unbind(EQUAL_SET);\n                }\n                for (var i = 0; i < fields.length; i += 1) {\n                    var field = fields[i].field;\n                    var element = that.wrapper.find('[name=\\'' + field + '\\']');\n                    var widgetInstance = kendo.widgetInstance(element);\n                    element.val('');\n                    if (widgetInstance) {\n                        widgetInstance.value(null);\n                    }\n                    that._toggleHint(element, false);\n                    if (typeof model[field] === 'boolean') {\n                        element.val('false');\n                        model.set(field, false);\n                    } else {\n                        model.set(field, null);\n                    }\n                }\n                that.wrapper.find(DOT + formStyles.fieldError).removeClass(formStyles.fieldError);\n                if (validateOnBlur) {\n                    model.bind(SET, editable._validateProxy).bind(EQUAL_SET, editable._validateProxy);\n                }\n            },\n            setOptions: function (newOptions) {\n                var that = this;\n                that.destroy();\n                that.wrapper.removeClass(formStyles.horizontal).removeAttr(DATA_STOP).empty();\n                that.init(that.element, newOptions);\n            },\n            destroy: function () {\n                var that = this;\n                that.wrapper.off(NS);\n                Widget.fn.destroy.call(that.editable);\n                Widget.fn.destroy.call(that);\n                if (that.editable) {\n                    that.editable.destroy();\n                    that.editable = null;\n                }\n            }\n        });\n        ui.plugin(Form);\n        extend(true, Form, { styles: formStyles });\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));"]}